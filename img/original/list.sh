#!/bin/bash

# Created by argbash-init v2.4.1a
# ARG_HELP([Listar las imágenes de un directorio calculando sus dimensiones.])
# ARG_OPTIONAL_SINGLE([resolution],[r],[Resolución de las imágenes],[150])
# ARG_OPTIONAL_SINGLE([base-directory],[d],[Directorio base de las imágenes],[])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.4.1a one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options='hrd'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}



# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_resolution="150"
_arg_base_directory=

print_help ()
{
	printf "%s\n" "Listar las imágenes de un directorio calculando sus dimensiones."
	printf 'Usage: %s [-h|--help] [-r|--resolution <arg>] [-d|--base-directory <arg>]\n' "$0"
	printf "\t%s\n" "-h,--help: Prints help"
	printf "\t%s\n" "-r,--resolution: Resolución de las imágenes (default: '"150"')"
	printf "\t%s\n" "-d,--base-directory: Directorio base de las imágenes (no default)"
}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			-r|--resolution)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_resolution="$2"
				shift
				;;
			--resolution=*)
				_arg_resolution="${_key##--resolution=}"
				;;
			-r*)
				_arg_resolution="${_key##-r}"
				;;
			-d|--base-directory)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_base_directory="$2"
				shift
				;;
			--base-directory=*)
				_arg_base_directory="${_key##--base-directory=}"
				;;
			-d*)
				_arg_base_directory="${_key##-d}"
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash


RES=$_arg_resolution
DIR="$_arg_base_directory"


#![](img/tema1/mod-jerarquico.png)
#Titulo de la imagen
#{: .figure style="width: 10cm"}
for f in *.png
do
	DIMS=`identify $f | cut -d" " -f3`

	w=`echo $DIMS | cut -d"x" -f1`
	h=`echo $DIMS | cut -d"x" -f2`

	#c=$[ 254 * $w / ( $RES * 100 ) ]
	c=$( echo "scale=1; 254 * $w / ( $RES * 100 )" | bc -l )

	#echo -e "$f\t$c"
	echo -e '![]('$DIR$f')'
	echo -e '{: .figure style="width: '$c'cm"}\n'
done

# ] <-- needed because of Argbash
